/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

@font-face {
  font-family: 'MaisonNeueBook';
  src: url("/assets/fonts/maisonneuebook.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'MaisonNeueBold';
  src: url("/assets/fonts/maisonneuebold.ttf") format("truetype");
  font-weight: normal;
  font-style: normal; }

body {
  font-family: MaisonNeueBook, Helvetica, Arial, sans-serif; }

p {
  margin: 0;
  line-height: 1.5; }

span {
  line-height: 1.5;
  font-size: 0.9em; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: MaisonNeueBold, Helvetica, Arial, sans-serif; }

h1 {
  line-height: 1.25; }

.intro p {
  font-size: 1.125em;
  line-height: 1.5; }

figcaption > h3 {
  margin: 0; }

figcaption > p {
  margin: 0 0 0.75em; }

a {
  line-height: 1.25; }

body {
  background: #000000;
  color: #FFFFFF;
  width: 100%; }

.intro {
  border-bottom: 0.25em solid #FFFFFF;
  padding-bottom: 4em;
  width: 33.33333%; }
  @media only screen and (max-width: 63.9375em) {
    .intro {
      width: 50%; } }
  @media only screen and (max-width: 40em) {
    .intro {
      width: 100%; } }

main {
  width: 90%;
  max-width: 1000px;
  margin: 0 auto;
  padding-top: 5em; }

header {
  width: 90%;
  max-width: 1000px;
  margin: 0 auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  height: 5.625em; }
  header .home-link {
    text-decoration: none;
    color: #FFFFFF; }

nav {
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }
  nav ul {
    list-style: none;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    margin: 0;
    padding: 0; }
  nav li {
    padding: 1em; }
  nav li:first-child {
    padding-left: 0; }
  nav li:last-child {
    padding-right: 0; }
  nav a {
    text-decoration: none;
    color: #FFFFFF;
    padding: 1em 0; }

footer {
  width: 90%;
  max-width: 1000px;
  margin: 0 auto;
  padding-top: 8em;
  padding-bottom: 2.5em; }
  footer ul {
    list-style: none;
    margin: 0;
    padding: 0;
    border-top: 0.25em solid #FFFFFF;
    width: 33.33333%; }
    @media only screen and (max-width: 63.9375em) {
      footer ul {
        width: 50%; } }
    @media only screen and (max-width: 40em) {
      footer ul {
        width: 100%; } }
  footer li:first-child {
    padding-top: 2.5em; }
  footer a {
    text-decoration: none;
    color: #FFFFFF; }

.work-title {
  padding: 2.5em 0;
  margin: 0; }

.work-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  list-style: none;
  padding: 0;
  margin: -1em 0 1em -1em; }

.project {
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 -webkit-calc(50% - 1em);
      -ms-flex: 0 0 calc(50% - 1em);
          flex: 0 0 calc(50% - 1em);
  padding: 1em 0 0 1em;
  overflow: hidden; }
  .project figure {
    position: relative;
    width: 100%;
    height: 100%;
    margin: 0;
    overflow: hidden; }
    .project figure:hover figcaption::after {
      -webkit-transform: translate3d(0, 0, 0);
              transform: translate3d(0, 0, 0); }
    .project figure:hover img {
      -webkit-transform: translate3d(0, -100px, 0);
              transform: translate3d(0, -100px, 0);
      -webkit-filter: grayscale(0) brightness(75%);
              filter: grayscale(0) brightness(75%); }
    .project figure img {
      position: relative;
      z-index: 999;
      max-width: 100%;
      vertical-align: top;
      -webkit-transform: translate3d(0, 0, 0);
              transform: translate3d(0, 0, 0);
      -webkit-filter: grayscale(100%) brightness(30%);
              filter: grayscale(100%) brightness(30%);
      -webkit-transition: 0.4s ease-in-out;
      transition: 0.4s ease-in-out; }
  .project figcaption {
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 1; }
    .project figcaption::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 3em;
      height: 0.25em;
      background: #FFFFFF;
      -webkit-transform: translate3d(-105%, 0, 0);
              transform: translate3d(-105%, 0, 0);
      -webkit-transition: -webkit-transform 0.4s;
      transition: -webkit-transform 0.4s;
      transition: transform 0.4s;
      transition: transform 0.4s, -webkit-transform 0.4s; }
  .project a {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 999; }

@media only screen and (max-width: 63.9375em) {
  .project figure:hover img {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  .project figcaption {
    bottom: 1em;
    left: 1em;
    z-index: 1000; }
    .project figcaption::after {
      -webkit-transform: translate3d(0, 0, 0);
              transform: translate3d(0, 0, 0);
      -webkit-transition: none;
      transition: none; } }

@media only screen and (max-width: 40em) {
  .project {
    -webkit-box-flex: 1;
    -webkit-flex: 1 0 -webkit-calc(100% - 1em);
        -ms-flex: 1 0 calc(100% - 1em);
            flex: 1 0 calc(100% - 1em); } }

.about-page a {
  color: #FFFFFF; }

.about-info {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin: -1em 0 1em -1em;
  padding-top: 2.5em; }

.skills,
.experience {
  padding: 1em 0 0 1em;
  -webkit-box-flex: 1;
  -webkit-flex: 1 0 -webkit-calc(50% - 2em);
      -ms-flex: 1 0 calc(50% - 2em);
          flex: 1 0 calc(50% - 2em); }

.skills-list,
.experience-list {
  margin: 0;
  padding: 0;
  list-style: none; }

.experience-list li {
  padding-bottom: 1em; }

.resume {
  padding: 1em 0 0 1em;
  margin-top: 3.5em; }

@media only screen and (max-width: 40em) {
  .skills,
  .experience {
    -webkit-box-flex: 1;
    -webkit-flex: 1 0 -webkit-calc(100% - 2em);
        -ms-flex: 1 0 calc(100% - 2em);
            flex: 1 0 calc(100% - 2em); } }

.detail-page a {
  color: #FFFFFF; }

.image-container {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  margin: -1em 0 1em -1em;
  padding: 2.5em 0 0 0;
  list-style: none; }
  .image-container li {
    padding: 1em 0 0 1em; }
    .image-container li.full-width {
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 -webkit-calc(100% - 1em);
          -ms-flex: 1 0 calc(100% - 1em);
              flex: 1 0 calc(100% - 1em); }
    .image-container li.half-width {
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 -webkit-calc(50% - 2em);
          -ms-flex: 1 0 calc(50% - 2em);
              flex: 1 0 calc(50% - 2em); }
  .image-container img {
    width: 100%;
    max-width: 100%;
    vertical-align: top; }

@media only screen and (max-width: 40em) {
  .image-container li.half-width {
    -webkit-box-flex: 1;
    -webkit-flex: 1 0 -webkit-calc(100% - 1em);
        -ms-flex: 1 0 calc(100% - 1em);
            flex: 1 0 calc(100% - 1em); } }

.notfound h1 {
  font-size: 5em; }

.notfound a {
  color: #FFFFFF; }

/*# sourceMappingURL=data:application/json;base64, */
